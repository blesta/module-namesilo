
<?php
    $this->Form->create();
    ?>

    <?php
    $i = 0;
    foreach ($sections as $key) {
        ?>
        <div class="title_row first">
            <h3><?php $this->_('Namesilo.tab_whois.section_' . $key); ?></h3>
        </div>
        <div class="pad">
            <ul>
                <?php
                if ($key != 'registrant') {
                    ?>
                    <label for="match-registrant-<?php echo $key ?>">Match Registrant</label>
                    <input type="checkbox" id="match-registrant-<?php echo $key ?>" value="<?php echo $key; ?>" onClick="matchInfo(this)"/>
                <?php
                }
                foreach ($fields as $field) {
                    if (substr($field->params['for'], 0, strlen($key)) != $key) {
                        continue;
                    }
                    ?>
                    <li>
                        <?php
                        // Draw the primary label/field
                        call_user_func_array([$this->Form, $field->type], $field->params);

                        // Draw each form field associated with this label
                        $tooltips = [];
                        foreach ($field->fields as $input) {

                            // Collect all tooltips to be displayed at the end
                            if ($input->type == 'tooltip') {
                                $tooltips[] = $input;
                                continue;
                            }

                            call_user_func_array([$this->Form, $input->type], $input->params);

                            // Draw the form field's secondary label if checkbox or radio item
                            if (($input->type == 'fieldCheckbox' || $input->type == 'fieldRadio') && isset($input->label)) {
                                if (isset($input->label->params['attributes']['class'])) {
                                    if (is_array($input->label->params['attributes']['class'])) {
                                        $input->label->params['attributes']['class'][] = 'inline';
                                    } else {
                                        $input->label->params['attributes']['class'] .= ' inline';
                                    }
                                } else {
                                    $input->label->params['attributes']['class'] = 'inline';
                                }

                                call_user_func_array([$this->Form, 'label'], $input->label->params);
                            }
                        }

                        foreach ($tooltips as $tooltip) {
                            ?>
                            <span class="tooltip">
                        <?php $this->_('AppController.tooltip.text'); ?>
                                <div><?php echo (isset($tooltip->params['message']) ? $this->Html->safe($tooltip->params['message']) : null); ?></div>
                    </span>
                            <?php
                        }
                        ?>
                    </li>
                    <?php
                }
                ?>
            </ul>
        </div>
        <?php
        $i++;
    }
    ?>
    <div class="button_row"><a class="btn btn-primary float-right submit" href="#"><?php $this->_('Namesilo.tab_whois.field_submit'); ?></a></div>
    <?php
    $this->Form->end();
    ?>

    <script>
        function copyAndDisable(that, ele) {
            if ($(ele).prop('checked')) {
                const line_name = $(that).attr('name').match(/\[(.*)\]/)[1];
                const main_val = $("input[name='registrant[" + line_name + "]']").val()

                $(that).val(main_val)
                $(that).prop('disabled', true)
            } else {
                $(that).prop('disabled', false)
            }
        }

        function matchInfo(ele) {
            const value = $(ele).val()
            // const registrant = $( "input[name^='registrant']" )

            switch(value) {
                case 'admin':
                    $( "input[name^='administrative']" ).each(function() {
                        copyAndDisable(this, ele)
                    })
                    break;
                case 'tech':
                    $( "input[name^='technical']" ).each(function() {
                        copyAndDisable(this, ele)
                    })
                    break;
                case 'billing':
                    $( "input[name^='billing']" ).each(function() {
                        copyAndDisable(this, ele)
                    })
                    break;
            }
        }
    </script>